FORMAT: 1A

# LWS-REST Mock Requests

This document contains mock API requests only.
See real API on [http://docs.lokiserver.apiary.io](http://docs.lokiserver.apiary.io).


# Group Site Services 
Following resources belong to Site Services.

## Site services resource [/api/customers/{+customerId}/sites/{+siteId}/services]
Represents Site services resource.

### URI Template Parameters JSON Schema
    {
      "title": "Site services URI template parameters",
      "description": "Site services URI template parameters",
      "type": "object",
      "properties": {
        "customerId": { "$ref": "/base#/definitions/CustomerId" },
        "siteId": { "$ref": "/base#/definitions/SiteId" }
      },
      "required": ["customerId", "siteId"]
    }


### Retrieve Site services [GET]
Retrieve Site services.

+ Links
    + self - Self link.

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120


+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
          "_links": {
            "self": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/services"
            },
            "up": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite"
            },
            "ls:customer": {
              "href": "http://uc.example.com/api/customers/DemoCustomer"
            },
            "ls:site-services": [
              {
                "title" : "Auto Attendant",
                "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/services/auto-attendant"
              }
            ],
            "ls:site-service-packs": [
              {
                "href": "http://uc.example.com/api/customers/DemoCustomer/service-packs/Standard"
              }
            ]
          },
          "customerId": "DemoCustomer",
          "siteId": "DemoSite",
          "_embedded": {
            "ls:site-service-packs": [
              {
                "_links": {
                  "self": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/service-packs/Standard"
                  },
                  "collection": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/service-packs"
                  },
                  "ls:customer": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer"
                  }
                },
                "customerId": "DemoCustomer",
                "name": "Standard",
                "authorized": true,
                "assigned": true,
                "allowed": {
                  "unlimited": true
                },
                "allocated": {
                  "unlimited": false,
                  "quantity": 10
                },
                "usage": 2,
                "description": "Demo service pack"
              }
            ]
          },
          "siteServices": {
            "Auto Attendant": {
              "name": "Auto Attendant",
              "authorized": true,
              "assigned": true,
              "allowed": {
                "unlimited": false,
                "quantity": 10
              },
              "allocated": {
                "unlimited": false,
                "quantity": 10
              },
              "usage": 2,
              "licensed": true
            }
          },
          "userServices": {
            "Advice Of Charge": {
              "name": "Advice Of Charge",
              "authorized": true,
              "assigned": true,
              "allowed": {
                "unlimited": false,
                "quantity": 10
              },
              "allocated": {
                "unlimited": false,
                "quantity": 10
              },
              "usage": 2,
              "licensed": true,
              "userAssignable": true,
              "siteServiceAssignable": true
            }
          }
        }

    + Schema

        {
          "title": "Retrieve Site services resource",
          "description": "Retrieve Site services resource",
          "type": "object",
          "allOf": [
            { "$ref": "/base#/definitions/HalResponse" },
            { "required": ["_links"] },
            {
              "properties": {
                "_embedded": {
                  "title": "Embedded",
                  "description": "Embedded.",
                  "type":"object",
                  "properties": {
                    "ls:site-service-packs": {
                      "title": "List of Service Packs assigned to the Site",
                      "description": "List of Service Packs assigned to the Site.",
                      "type": "array",
                      "items": {
                        "title": "Service packs",
                        "description": "Service pack.",
                        "type": "object",
                        "allOf": [
                          { "$ref": "/base#/definitions/HalResponse" },
                          { "required": ["_links"] },
                          {
                            "properties": {
                              "customerId": { "$ref": "/base#/definitions/CustomerId" },
                              "name": {
                                "title": "Service Pack name",
                                "description": "Service Pack name.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                              },
                              "authorized": {
                                "title": "Is the Service Pack authorized to the Site",
                                "description": "Is the Service Pack authorized to the Site.",
                                "type": "boolean"
                              },
                              "assigned": {
                                "title": "Is the Service assigned to the Site",
                                "description": "Is the Service assigned to the Site.",
                                "type": "boolean"
                              },
                              "allowed": {
                                "title": "Service allowed settings",
                                "description": "Container for Service Pack allowed settings.",
                                "type": "object",
                                "required": ["unlimited"],
                                "properties": {
                                  "unlimited": {
                                    "title": "Flag that specifies if Service Pack is allowed in unlimited quantity",
                                    "description": "Flag that specifies if the Service Pack  is allowed in unlimited quantity.",
                                    "type": "boolean"
                                  },
                                  "quantity": {
                                    "title": "Number of allowed Service Packs assignments",
                                    "description": "Number of allowed Service Packs assignments in Site.",
                                    "type": "integer"
                                  }
                                }
                              },
                              "allocated": {
                                "title": "Allocated settings",
                                "description": "Container for Service Pack allocated settings.",
                                "type": "object",
                                "required": ["unlimited"],
                                "properties": {
                                  "unlimited": {
                                    "title": "Flag that specifies if the Service Pack is allocated in unlimited quantity",
                                    "description": "Flag that specifies if the Service Pack is allocated in unlimited quantity.",
                                    "type": "boolean"
                                  },
                                  "quantity": {
                                    "title": "Number of allocated Service Packs assignments",
                                    "description": "Number of allocated Service Packs assignments in Site.",
                                    "type": "integer"
                                  }
                                }
                              },
                              "usage": {
                                "title": "Number of Service Pack Site",
                                "description": "Number of Service Pack in Site.",
                                "type": "integer"
                              },
                              "description": {
                                "title": "Service Pack description",
                                "description": "Service Pack description.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 256
                              }
                            },
                            "required": ["name", "customerId", "authorized", "assigned", "allowed", "usage", "description"]
                          }
                        ]
                      }
                    }
                  }
                },
                "customerId": { "$ref": "/base#/definitions/CustomerId" },
                "siteId": { "$ref": "/base#/definitions/SiteId" },
                "siteServices": {
                  "title": "Authorized Site services",
                  "description": "Container for authorized Site services.",
                  "type": "object",
                  "additionalProperties": false,
                  "patternProperties": {
                    "[a-zA-Z0-9 ]+" : {
                      "title": "Service information",
                      "description": "Container for Service information.",
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["name", "authorized", "assigned", "allowed", "allocated", "usage", "licensed"],
                      "properties": {
                        "name": {
                          "title": "Service name",
                          "description": "Service name.",
                          "type": "string"
                        },
                        "authorized": {
                          "title": "Service authorized to the Site",
                          "description": "Is the Service authorized to the Site.",
                          "type": "boolean"
                        },
                        "assigned": {
                          "title": "Is the Service assigned to the Site",
                          "description": "Is the Service assigned to the Site.",
                          "type": "boolean"
                        },
                        "allowed": {
                          "title": "Service allowed settings",
                          "description": "Container for Service allowed settings.",
                          "type": "object",
                          "required": ["unlimited"],
                          "properties": {
                            "unlimited": {
                              "title": "Flag that specifies if Service is allowed in unlimited quantity",
                              "description": "Flag that specifies if the Service is allowed in unlimited quantity.",
                              "type": "boolean"
                            },
                            "quantity": {
                              "title": "Number of allowed Service assignments",
                              "description": "Number of allowed Service assignments in Site.",
                              "type": "integer"
                            }
                          }
                        },
                        "allocated": {
                          "title": "Allocated settings",
                          "description": "Container for Service allocated settings.",
                          "type": ["object","null"],
                          "required": ["unlimited"],
                          "properties": {
                            "unlimited": {
                              "title": "Flag that specifies if the Service is allocated in unlimited quantity",
                              "description": "Flag that specifies if the Service is allocated in unlimited quantity.",
                              "type": "boolean"
                            },
                            "quantity": {
                              "title": "Number of allocated Service assignments",
                              "description": "Number of allocated Service assignments in Site.",
                              "type": "integer"
                            }
                          }
                        },
                        "usage": {
                          "title": "Number of Service assignments in Site",
                          "description": "Number of Service assignments in Site.",
                          "type": "integer"
                        },
                        "licensed": {
                          "title": "Flag that specifies if the Service is licensed",
                          "description": "Flag that specifies if the Service is licensed.",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "userServices": {
                  "title": "Authorized User services",
                  "description": "Container for authorized User services in Site.",
                  "type": "object",
                  "additionalProperties": false,
                  "patternProperties": {
                    "[a-zA-Z0-9 ]+": {
                      "title": "Service information",
                      "description": "Container for Service information.",
                      "type": "object",
                      "additionalProperties": false,
                      "required": ["name", "authorized", "assigned", "allowed", "allocated", "usage", "licensed", "userAssignable", "siteServiceAssignable"],
                      "properties": {
                        "name": {
                          "title": "Service name",
                          "description": "Service name.",
                          "type": "string"
                        },
                        "authorized": {
                          "title": "Service authorized to the Site",
                          "description": "Is the Service authorized to the Site.",
                          "type": "boolean"
                        },
                        "assigned": {
                          "title": "Is the Service assigned",
                          "description": "Is the Service assigned.",
                          "type": "boolean"
                        },
                        "allowed": {
                          "title": "Service allowed settings",
                          "description": "Container for Service allowed settings.",
                          "type": "object",
                          "required": ["unlimited"],
                          "properties": {
                            "unlimited": {
                              "title": "Flag that specifies if Service is allowed in unlimited quantity",
                              "description": "Flag that specifies if the Service is allowed in unlimited quantity.",
                              "type": "boolean"
                            },
                            "quantity": {
                              "title": "Number of allowed Service assignments",
                              "description": "Number of allowed Service assignments.",
                              "type": "integer"
                            }
                          }
                        },
                        "allocated": {
                          "title": "Allocated settings",
                          "description": "Container for Service allocated settings.",
                          "type": "object",
                          "required": ["unlimited"],
                          "properties": {
                            "unlimited": {
                              "title": "Flag that specifies if the Service is allocated in unlimited quantity",
                              "description": "Flag that specifies if the Service is allocated in unlimited quantity.",
                              "type": "boolean"
                            },
                            "quantity": {
                              "title": "Number of allocated Service assignments",
                              "description": "Number of allocated Service assignments.",
                              "type": "integer"
                            }
                          }
                        },
                        "usage": {
                          "title": "Number of Service assignments",
                          "description": "Number of Service assignments.",
                          "type": "integer"
                        },
                        "licensed": {
                          "title": "Flag that specifies if the Service is licensed",
                          "description": "Flag that specifies if the Service is licensed.",
                          "type": "boolean"
                        },
                        "userAssignable": {
                          "title": "Flag that specifies if the Service is assignable to a normal User",
                          "description": "Flag that specifies if the Service is assignable to a normal User.",
                          "type": "boolean"
                        },
                        "siteServiceAssignable": {
                          "title": "Flag that specifies if the Service is assignable to a Site service",
                          "description": "Flag that specifies if the Service is assignable to a Site service.",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["customerId", "siteId", "siteServices", "userServices"]
            }
          ]
        }

# Group Site 
Following resources belong to Site entity.
## Customer’s Sites resource [/api/customers/{+customerId}/sites]
Represents Customer’s Sites resource.

### URI Template Parameters JSON Schema
    {
      "title": "Customer’s Sites list URI template parameters",
      "description": "Customer’s Sites list URI template parameters",
      "type": "object",
      "properties": {
        "customerId": { "$ref": "/base#/definitions/CustomerId" }
      },
      "required": ["customerId"]
    }


### Retrieve Customer’s Sites resource [GET]
Retrieve Customer’s Sites resource.

+ Links
    + self - Self link.

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120


+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
          "_links": {
            "self": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites"
            },
            "up": {
              "href": "http://uc.example.com/api/customers/DemoCustomer"
            },
            "item": [
              {
                "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite"
              },
              {
                "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite2"
              }
            ],
            "ls:system-password-rules": {
              "href": "http://uc.example.com/api/password-rules"
            },
            "ls:system-passcode-rules": {
              "href": "http://uc.example.com/api/passcode-rules"
            }
          },
          "_embedded": {
            "item": [
              {
                "_links": {
                  "self": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite"
                  },
                  "ls:site-services": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/services"
                  },
                  "ls:site-phone-numbers": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/phone-numbers"
                  },
                  "ls:site-domains": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/domains"
                  },
                  "ls:site-users": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/users"
                  },
                  "ls:site-restore-default-feature-access-codes": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/restoreDefaultFeatureAccessCodes"
                  }
                },
                "siteId": "DemoSite",
                "userLimit": 25,
                "siteName": "DemoSite",
                "extensions": {
                  "broadworks": {
                    "resourceId": "DemoSite"
                  }
                }
              },
              {
                "_links": {
                  "self": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite2"
                  },
                  "ls:site-services": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite2/services"
                  },
                  "ls:site-phone-numbers": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite2/phone-numbers"
                  },
                  "ls:site-domains": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite2/domains"
                  },
                  "ls:site-users": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite2/users"
                  },
                  "ls:site-restore-default-feature-access-codes": {
                    "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite2/restoreDefaultFeatureAccessCodes"
                  }
                },
                "siteId": "DemoSite2",
                "userLimit": 10,
                "siteName": "DemoSite2",
                "extensions": {
                  "broadworks": {
                    "resourceId": "DemoSite2"
                  }
                }
              }
            ]
          },
          "customerId": "DemoCustomer"
        }
        

    + Schema

        {
          "title": "Retrieve the Customer’s Sites list",
          "description": "Retrieve the Customer’s Sites list",
          "allOf": [
            {
              "$ref": "/base#/definitions/HalResponse"
            }, {
              "required": ["_links"]
            }, {
              "properties": {
                "customerId": {
                  "$ref": "/base#/definitions/CustomerId"
                }
              },
              "required": ["customerId"]
            }
          ]
        }

## Site resource [/api/customers/{+customerId}/sites/{+siteId}]
Represents Site resource.

### URI Template Parameters JSON Schema
    {
      "title": "Site resource URI template parameters",
      "description": "Site resource URI template parameters",
      "type": "object",
      "properties": {
        "customerId": { "$ref": "/base#/definitions/CustomerId" },
        "siteId": { "$ref": "/base#/definitions/SiteId" }
      },
      "required": ["customerId", "siteId"]
    }

### Retrieve Site resource [GET]
Retrieve Site resource.

+ Links
    + self - Self link.

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120


+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
          "_links": {
            "self": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite"
            },
            "collection": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites"
            },
            "ls:customer": {
              "href": "http://uc.example.com/api/customers/DemoCustomer"
            },
            "ls:site-services": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/services"
            },
            "ls:site-phone-numbers": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/phone-numbers"
            },
            "ls:site-domains": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/domains"
            },
            "ls:site-users": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/users"
            },
            "ls:site-restore-default-feature-access-codes": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/restoreDefaultFeatureAccessCodes"
            },
            "ls:system-password-rules": {
              "href": "http://uc.example.com/api/password-rules"
            },
            "ls:system-passcode-rules": {
              "href": "http://uc.example.com/api/passcode-rules"
            }
          },
          "customerId": "DemoCustomer",
          "siteId": "DemoSite",
          "profile": {
            "defaultDomain": "example.com",
            "userLimit": 25,
            "userCount": 2,
            "siteName": "DemoSite",
            "callingLineId": {
              "name": "ExampleCom",
              "phoneNumber": "+1-2025555003"
            },
            "timeZone": "US\/Eastern",
            "locationDialingCode": "1",
            "contact": {
              "name": "bob jones",
              "phone": "2028887777",
              "email": "bjones@jones.com"
            },
            "address": {
              "addressLine1": "415 Sixth Ave",
              "addressLine2": "Suite 102",
              "city": "North Seventh",
              "stateOrProvince": "Alabama",
              "zipOrPostalCode": "50415",
              "country": "USA"
            }
          },
          "extensionLength": {
            "min": 4,
            "max": 6,
            "default": 4
          },
          "passwordRules": {
            "useRuleLevel": "Site",
            "rulesModification": {
              "disallow": true
            },
            "validations": {
              "userId": {
                "disallow": true
              },
              "oldPassword": {
                "disallow": true
              },
              "reversedOldPassword": {
                "disallow": true
              },
              "previousPasswords": {
                "disallow": true,
                "numberOfPasswords": 2
              },
              "digits": {
                "require": true,
                "minimum": 2
              },
              "upperCaseLetters": {
                "require": true,
                "minimum": 1
              },
              "lowerCaseLetters": {
                "require": true,
                "minimum": 1
              },
              "nonAlphanumericCharacters": {
                "require": true,
                "minimum": 1
              },
              "length": {
                "minimum": 8
              }
            },
            "loginAttempts": {
              "restrict": true,
              "maximum": 3
            },
            "expirePassword": {
              "enable": true,
              "numberOfDays": 30
            },
            "loginDisabledNotification": {
              "sendEmail": true,
              "email": "DemoEmail@example.com"
            }
          },
          "passcodeRules": {
            "useRuleLevel": "Site",
            "validations": {
              "repeatedPatterns": {
                "disallow": true
              },
              "userNumber": {
                "disallow": true
              },
              "reversedUserNumber": {
                "disallow": true
              },
              "reversedOldPasscode": {
                "disallow": true
              },
              "repeatedDigits": {
                "disallow": true,
                "maximum": 2
              },
              "contiguousSequences": {
                "disallow": true,
                "numberOfAscendingDigits": 3,
                "numberOfDescendingDigits": 3
              },
              "previousPasscodes": {
                "disallow": true,
                "numberOfPasscodes": 2
              },
              "length": {
                "minimum": 6,
                "maximum": 10
              }
            },
            "loginAttempts": {
              "restrict": true,
              "maximum": 3
            },
            "expirePasscode": {
              "enable": true,
              "numberOfDays": 30
            },
            "loginDisabledNotification": {
              "sendEmail": false,
              "email": null
            }
          },
          "featureAccessCodes": {
            "speedDialPrefix": "#",
            "useFeatureAccessCodeLevel": "Site",
            "codes": [
              {
                "name": "Direct Voice Mail Transfer",
                "mainCode": "*55",
                "alternateCode": "*65",
                "enable": true
              },
              {
                "name": "Call Forwarding Not Reachable Deactivation",
                "mainCode": "*95",
                "alternateCode": "*66",
                "enable": true
              },
              {
                "name": "Call Bridge",
                "mainCode": "*15",
                "alternateCode": "*67",
                "enable": true
              }
            ]
          },
          "callProcessingPolicy": {
            "callingLineId": {
              "useSiteCLIDSetting": false,
              "useSiteName": false,
              "allowDepartmentCLIDNameOverride": false,
              "policy": {
                "external": "Use DN",
                "customer": "Use Extension",
                "site": "Use Extension",
                "emergency": "Use DN"
              },
              "redirectingIdentity": {
                "allowAlternateNumbers": true,
                "allowConfigurableCLID": true
              },
              "blockCallingNameForExternalCalls": false
            },
            "callLimits": {
              "useSiteCallLimitsSetting": false,
              "simultaneous": {
                "calls": {
                  "useMaximum": false,
                  "maximum": 10
                },
                "videoCalls": {
                  "useMaximum": false,
                  "maximum": 5
                }
              },
              "callTime": {
                "answeredCalls": {
                  "useMaximum": false,
                  "maximum": 600
                },
                "unansweredCalls": {
                  "useMaximum": false,
                  "maximum": 2
                }
              },
              "concurrent": {
                "redirectedCalls": {
                  "useMaximum": false,
                  "maximum": 3
                },
                "findMeFollowMeInvocations": {
                  "useMaximum": false,
                  "maximum": 3
                }
              },
              "depth": {
                "findMeFollowMe": {
                  "useMaximum": false,
                  "maximum": 3
                },
                "redirection": {
                  "maximum": 10
                }
              }
            },
            "media": {
              "useSiteMediaSetting": true,
              "mediaPolicySelection": "Use Supported Media Set",
              "supportedMediaSetName": null
            },
            "translationAndRouting": {
              "useSiteTranslationRoutingSetting": false,
              "networkUsageSelection": "Force All Calls",
              "enableCustomerExtensionDialing": true,
              "enforceCallingLineIdentityRestriction": {
                "site": false
              },
              "allowCustomerSiteCallTyping": {
                "privateDialingPlan": false,
                "publicDialingPlan": false
              },
              "privateCallCategory": {
                "overrideCLIDRestriction": false,
                "useCustomerCLID": false
              }
            },
            "incomingCallerId": {
              "useSiteDCLIDSetting": false,
              "enableDialableCallerID": false
            }
          },
          "extensions": {
            "broadworks": {
              "resourceId": "DemoSite"
            }
          }
        }
        

    + Schema

        {
          "title": "Retrieve Site resource",
          "description": "Retrieve Site resource",
          "type": "object",
          "allOf": [
            {
              "$ref": "/base#/definitions/HalResponse"
            }, {
              "required": ["_links"]
            }, {
              "properties": {
                "profile": {
                  "title": "Profile",
                  "description": "Container for Site profile information.",
                  "type": "object",
                  "required": ["siteName", "defaultDomain", "userLimit", "userCount", "callingLineId", "timeZone", "locationDialingCode", "contact", "address"],
                  "properties": {
                    "siteName": {
                      "anyOf":[
                        { "$ref": "/base#/definitions/SiteName" },
                        { "type": "null" }
                      ]
                    },
                    "defaultDomain": {
                      "$ref": "/base#/definitions/Domain"
                    },
                    "userLimit": {
                      "title": "User limit",
                      "description": "Configured maximum number of users in the Site.",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 999999
                    },
                    "userCount": {
                      "title": "Users count",
                      "description": "Number of users in the Site.",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 999999
                    },
                    "callingLineId":{
                      "title": "Calling line Id",
                      "description": "Number of users in the Site.",
                      "type": ["object", "null"],
                      "required": ["name", "phoneNumber"],
                      "properties": {
                        "name": {
                          "title": "Phone number",
                          "description": "Site calling line ID phone number.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 80
                        },
                        "phoneNumber": {
                          "title": "Phone number",
                          "description": "Site calling line ID phone number.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 23
                        }
                      }
                    },
                    "timeZone": {
                      "title": "Time Zone",
                      "description": "Time Zone.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 127
                    },
                    "locationDialingCode": {
                      "title": "Location dialing code.",
                      "description": "Site location dialing code.",
                      "type": ["string", "null"],
                      "minLength": 1,
                      "maxLength": 15
                    },
                    "contact": {
                      "title": "Contact",
                      "description": "Container for contact settings.",
                      "type": ["object", "null"],
                      "required": ["name", "phone", "email"],
                      "properties": {
                        "name":{
                          "title": "Name",
                          "description": "Contact name.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 30
                        },
                        "phone": {
                          "title": "Name",
                          "description": "Contact name.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 30
                        },
                        "email":{
                          "anyOf":[
                            { "$ref": "/base#/definitions/EmailAddress" },
                            { "type": "null" }
                          ]
                        }
                      }
                    },
                    "address": {
                      "title": "Address",
                      "description": "Container for address settings.",
                      "type": [ "object", "null"],
                      "required": ["addressLine1", "addressLine2", "city", "stateOrProvince", "zipOrPostalCode", "country"],
                      "properties": {
                        "addressLine1": {
                          "title": "Address line 1",
                          "description": "Address line 1.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 80
                        },
                        "addressLine2": {
                          "title": "Address line 2",
                          "description": "Address line 2.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 80
                        },
                        "city": {
                          "title": "City",
                          "description": "City.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 50
                        },
                        "stateOrProvince": {
                          "title": "State or Province",
                          "description": "State or Province.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 50
                        },
                        "zipOrPostalCode": {
                          "title": "Zip or postal code",
                          "description": "Zip or postal code.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 50
                        },
                        "country": {
                          "title": "Country",
                          "description": "Country.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 50
                        }
                      }
                    }
                  }
                },
                "extensionLength": {
                  "title": "Extension length settings",
                  "description": "Container for Site extension length settings.",
                  "type": "object",
                  "required": ["min", "max", "default"],
                  "properties": {
                    "min": {
                      "title": "Minimum length of the extension",
                      "description": "Minimum length of the extension.",
                      "type": "integer",
                      "minimum": 2,
                      "maximum": 20
                    },
                    "max": {
                      "title": "Maximum length of the extension",
                      "description": "Maximum length of the extension.",
                      "type": "integer",
                      "minimum": 2,
                      "maximum": 20
                    },
                    "default": {
                      "title": "Default length of the extension",
                      "description": "Default length of the extension.",
                      "type": "integer",
                      "minimum": 2,
                      "maximum": 20
                    }
                  }
                },
                "passwordRules": {
                  "title": "Site password rules settings",
                  "description": "Container for Site password rules settings.",
                  "type": "object",
                  "required": ["useRuleLevel", "rulesModification", "validations", "loginAttempts", "expirePassword", "loginDisabledNotification"],
                  "properties": {
                    "useRuleLevel": {
                      "title": "User rule level",
                      "description": "Choices for the Site password rule to decide which type of rules to use.",
                      "enum": ["System", "Customer", "Site"]
                    },
                    "rulesModification": {
                      "title": "Disallow password rules container",
                      "description": "Disallow password rules container.",
                      "type": "object",
                      "required": ["disallow"],
                      "properties":{
                        "disallow": {
                          "title": "Disallow password rules modification",
                          "description": "Disallow password rules modification.",
                          "type": "boolean"
                        }
                      }
                    },
                    "validations": {
                      "title": "Container for Customer password validation settings",
                      "description": "Container for Customer password validation settings.",
                      "type": "object",
                      "required": ["userId", "oldPassword", "reversedOldPassword", "previousPasswords", "digits", "upperCaseLetters", "lowerCaseLetters", "nonAlphanumericCharacters", "length"],
                      "properties": {
                        "userId": {
                          "title": "Container for Customer password validation settings regarding User ID",
                          "description": "Container for Customer password validation settings regarding User ID.",
                          "type": "object",
                          "required": ["disallow"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow User ID",
                              "description": "Disallow User ID.",
                              "type": "boolean"
                            }
                          }
                        },
                        "oldPassword": {
                          "title": "Container for Customer password validation settings regarding Old Password",
                          "description": "Container for Customer password validation settings regarding Old Password",
                          "type": "object",
                          "required": ["disallow"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow old password",
                              "description": "Disallow old password.",
                              "type": "boolean"
                            }
                          }
                        },
                        "reversedOldPassword": {
                          "title": "Container for Customer password validation settings regarding Reversed Old Password",
                          "description": "Container for Customer password validation settings regarding Reversed Old Password",
                          "type": "object",
                          "required": ["disallow"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow reversed old password",
                              "description": "Disallow reversed old password.",
                              "type": "boolean"
                            }
                          }
                        },
                        "previousPasswords": {
                          "title": "Container for Customer password validation settings regarding Previous Passwords",
                          "description": "Container for Customer password validation settings regarding Previous Passwords",
                          "type": "object",
                          "required": ["disallow", "numberOfPasswords"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow previous passwords",
                              "description": "Disallow previous passwords.",
                              "type": "boolean"
                            },
                            "numberOfPasswords": {
                              "title": "Number of previous passwords to keep in history",
                              "description": "Number of previous passwords to keep in history.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "digits": {
                          "title": "Container for Customer password validation settings regarding Digits",
                          "description": "Container for Customer password validation settings regarding Digits.",
                          "type": "object",
                          "required": ["require", "minimum"],
                          "properties": {
                            "require": {
                              "title": "Require a minimum number of digits",
                              "description": "Require a minimum number of digits.",
                              "type": "boolean"
                            },
                            "minimum": {
                              "title": "Minimum",
                              "description": "Minimum number of required digits.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "upperCaseLetters": {
                          "title": "Container for Customer password validation settings regarding Upper Case Letters",
                          "description": "Container for Customer password validation settings regarding Upper Case Letters.",
                          "type": "object",
                          "required": ["require", "minimum"],
                          "properties": {
                            "require": {
                              "title": "Require a minimum number of uppercase letters",
                              "description": "Require a minimum number of uppercase letters.",
                              "type": "boolean"
                            },
                            "minimum": {
                              "title": "Minimum number of required uppercase letters.",
                              "description": "Minimum number of required uppercase letters.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "lowerCaseLetters": {
                          "title": "Container for Customer password validation settings regarding Lower Case Letters",
                          "description": "Container for Customer password validation settings regarding Lower Case Letters.",
                          "type": "object",
                          "required": ["require", "minimum"],
                          "properties": {
                            "require": {
                              "title": "Require a minimum number of lowercase letters",
                              "description": "Require a minimum number of lowercase letters.",
                              "type": "boolean"
                            },
                            "minimum": {
                              "title": "Minimum number of required lowercase letters",
                              "description": "Minimum number of required lowercase letters.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "nonAlphanumericCharacters": {
                          "title": "Container for Customer password validation settings regarding Non-Alphanumeric Characters",
                          "description": "Container for Customer password validation settings regarding Non-Alphanumeric Characters.",
                          "type": "object",
                          "required": ["require", "minimum"],
                          "properties": {
                            "require": {
                              "title": "Require a minimum number of alphanumeric characters",
                              "description": "Require a minimum number of alphanumeric characters.",
                              "type": "boolean"
                            },
                            "minimum": {
                              "title": "Minimum number of required alphanumeric characters",
                              "description": "Minimum number of required alphanumeric characters.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "length": {
                          "title": "Container for Customer password validation settings regarding Password Length",
                          "description": "Container for Customer password validation settings regarding Password Length.",
                          "type": "object",
                          "required": ["minimum"],
                          "properties": {
                            "minimum": {
                              "title": "inimum length of the password",
                              "description": "Minimum length of the password.",
                              "type": "integer",
                              "minimum": 3,
                              "maximum": 40
                            }
                          }
                        }
                      }
                    },
                    "loginAttempts": {
                      "title": "Login attempts rules",
                      "description": "Container for login attempts rules.",
                      "type": "object",
                      "required": ["restrict"],
                      "properties": {
                        "restrict": {
                          "title": "Restrict",
                          "description": "Disable login after a maximum number of failed login attempts.",
                          "type": "boolean"
                        },
                        "maximum": {
                          "title": "Maximum",
                          "description": "Maximum number of failed login attempts.",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10
                        }
                      }
                    },
                    "expirePassword": {
                      "title": "Password expiration rules",
                      "description": "Container for password expiration rules.",
                      "type": "object",
                      "required": ["enable"],
                      "properties": {
                        "enable": {
                          "title": "Expire password after a number of days.",
                          "description": "Expire password after a number of days.",
                          "type": "boolean"
                        },
                        "numberOfDays": {
                          "title": "Number of days",
                          "description": "Days until the password expires.",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 199
                        }
                      }
                    },
                    "loginDisabledNotification": {
                      "title": "Login disabled notification settings",
                      "description": "Container for login disabled notification settings.",
                      "type": "object",
                      "required": [
                        "sendEmail",
                        "email"
                      ],
                      "properties": {
                        "sendEmail": {
                          "title": "Send email",
                          "description": "Send email when login is disabled.",
                          "type": "boolean"
                        },
                        "email": {
                          "anyOf": [
                            {
                              "$ref": "/base#/definitions/EmailAddress"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "passcodeRules": {
                  "title": "Site passcode rules settings",
                  "description": "Container for Site passcode rules settings.",
                  "type": "object",
                  "required": ["useRuleLevel", "validations", "loginAttempts", "expirePasscode", "loginDisabledNotification"],
                  "properties": {
                    "useRuleLevel": {
                      "title": "Site passcode rule to decide which type of rules to use",
                      "description": "Choices for the Site passcode rule to decide which type of rules to use.",
                      "enum": ["System", "Customer", "Site"]
                    },
                    "validations": {
                      "title": "Container for Customer passcode validation settings",
                      "description": "Container for Customer passcode validation settings.",
                      "type": "object",
                      "required": ["repeatedPatterns", "userNumber", "reversedUserNumber", "reversedOldPasscode", "repeatedDigits", "contiguousSequences", "previousPasscodes", "length"],
                      "properties": {
                        "repeatedPatterns": {
                          "title": "Container for Customer passcode validation settings regarding Repeated Patterns",
                          "description": "Container for Customer passcode validation settings regarding Repeated Patterns.",
                          "type": "object",
                          "required": ["disallow"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow repeated patterns",
                              "description": "Disallow repeated patterns.",
                              "type": "boolean"
                            }
                          }
                        },
                        "userNumber": {
                          "title": "Container for Customer passcode validation settings regarding User Number",
                          "description": "Container for Customer passcode validation settings regarding User Number.",
                          "type": "object",
                          "required": ["disallow"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow user number",
                              "description": "Disallow user number.",
                              "type": "boolean"
                            }
                          }
                        },
                        "reversedUserNumber": {
                          "title": "Container for Customer passcode validation settings regarding Reversed User Number",
                          "description": "Container for Customer passcode validation settings regarding Reversed User Number.",
                          "type": "object",
                          "required": ["disallow"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow reversed user number",
                              "description": "Disallow reversed user number.",
                              "type": "boolean"
                            }
                          }
                        },
                        "reversedOldPasscode": {
                          "title": "Container for Customer passcode validation settings regarding Reversed Old Passcode",
                          "description": "Container for Customer passcode validation settings regarding Reversed Old Passcode.",
                          "type": "object",
                          "required": ["disallow"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow reversed old passcode",
                              "description": "Disallow reversed old passcode.",
                              "type": "boolean"
                            }
                          }
                        },
                        "repeatedDigits": {
                          "title": "Container for Customer passcode validation settings regarding Repeated Digits",
                          "description": "Container for Customer passcode validation settings regarding Repeated Digits.",
                          "type": "object",
                          "required": ["disallow", "maximum"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow repeated digits",
                              "description": "Disallow repeated digits.",
                              "type": "boolean"
                            },
                            "maximum": {
                              "title": "Maximum number of allowed repeated digits",
                              "description": "Maximum number of allowed repeated digits.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 6
                            }
                          }
                        },
                        "contiguousSequences": {
                          "title": "Container for Customer passcode validation settings regarding Contiguous Sequences",
                          "description": "Container for Customer passcode validation settings regarding Contiguous Sequences.",
                          "type": "object",
                          "required": ["disallow", "numberOfAscendingDigits", "numberOfDescendingDigits"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow contiguous sequences",
                              "description": "Disallow contiguous sequences.",
                              "type": "boolean"
                            },
                            "numberOfAscendingDigits": {
                              "title": "Maximum number of contiguously increasing or decreasing digits allowed in the passcode",
                              "description": "Maximum number of contiguously increasing or decreasing digits allowed in the passcode.",
                              "type": "integer",
                              "minimum": 2,
                              "maximum": 5
                            },
                            "numberOfDescendingDigits": {
                              "title": "Maximum number of contiguously increasing or decreasing digits allowed in the passcode",
                              "description": "Maximum number of contiguously increasing or decreasing digits allowed in the passcode.",
                              "type": "integer",
                              "minimum": 2,
                              "maximum": 5
                            }
                          }
                        },
                        "previousPasscodes": {
                          "title": "Container for Customer passcode validation settings regarding Previous Passcodes",
                          "description": "Container for Customer passcode validation settings regarding Previous Passcodes.",
                          "type": "object",
                          "required": ["disallow", "numberOfPasscodes"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow old passcode.",
                              "description": "Disallow old passcode.",
                              "type": "boolean"
                            },
                            "numberOfPasscodes": {
                              "title": "Number of previous passcodes",
                              "description": "Number of previous passcodes to keep in history.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "length": {
                          "title": "Container for Customer passcode validation settings regarding Passcode Length",
                          "description": "Container for Customer passcode validation settings regarding Passcode Length.",
                          "type": "object",
                          "required": ["minimum", "maximum"],
                          "properties": {
                            "minimum": {
                              "title": "Minimum",
                              "description": "Minimum length of portal passcode.",
                              "type": "integer",
                              "minimum": 2,
                              "maximum": 15
                            },
                            "maximum": {
                              "title": "Maximum",
                              "description": "Maximum length of portal passcode.",
                              "type": "integer",
                              "minimum": 3,
                              "maximum": 30
                            }
                          }
                        }
                      }
                    },
                    "loginAttempts": {
                      "title": "Login attempts rules",
                      "description": "Container for login attempts rules.",
                      "type": "object",
                      "required": ["restrict"],
                      "properties": {
                        "restrict": {
                          "title": "Restrict",
                          "description": "Disable login after a maximum number of login attempts.",
                          "type": "boolean"
                        },
                        "maximum": {
                          "title": "Maximum",
                          "description": "Maximum allowed portal failed login attempts.",
                          "type": "integer",
                          "minimum": 2,
                          "maximum": 10
                        }
                      }
                    },
                    "expirePasscode": {
                      "title": "Container for passcode expiration rules",
                      "description": "Container for passcode expiration rules.",
                      "type": "object",
                      "required": ["enable"],
                      "properties": {
                        "enable": {
                          "title": "Expire passcode after a number of days",
                          "description": "Expire passcode after a number of days.",
                          "type": "boolean"
                        },
                        "numberOfDays": {
                          "title": "Passcode expiration days",
                          "description": "Portal passcode expiration days.",
                          "type": "integer",
                          "minimum": 15,
                          "maximum": 180
                        }
                      }
                    },
                    "loginDisabledNotification": {
                      "title": "Login disabled notification settings",
                      "description": "Container for login disabled notification settings.",
                      "type": "object",
                      "required": ["sendEmail", "email"],
                      "properties": {
                        "sendEmail": {
                          "title": "Send email",
                          "description": "Send email when login is disabled.",
                          "type": "boolean"
                        },
                        "email": {
                          "anyOf":[
                            { "$ref": "/base#/definitions/EmailAddress" },
                            { "type": "null" }
                          ]
                        }
                      }
                    }
                  }
                },
                "featureAccessCodes": {
                  "title": "Container for Site feature access codes settings",
                  "description": "Container for Site feature access codes settings.",
                  "type": "object",
                  "required": ["speedDialPrefix", "useFeatureAccessCodeLevel", "codes"],
                  "properties": {
                    "speedDialPrefix": {
                      "title": "Speed Dial prefix",
                      "description": "Speed Dial prefix.",
                      "type": ["string", "null"],
                      "pattern": "^[A-D0-9\\*\\#]+$",
                      "minLength": 1,
                      "maxLength": 2
                    },
                    "useFeatureAccessCodeLevel": {
                      "title": "Access Code Level",
                      "description": "Feature Access Code Level defining group policy how Feature Access Codes will be used by a Site.",
                      "enum": ["Customer", "Site"]
                    },
                    "codes": {
                      "title": "List of feature access codes",
                      "description": "List of feature access codes.",
                      "type": "array",
                      "items": {
                        "title": "Single feature access code settings",
                        "description": "Container for a single feature access code settings.",
                        "type": "object",
                        "required": ["name", "mainCode", "alternateCode", "enable"],
                        "properties": {
                          "name": {
                            "title": "Feature Access Code Name",
                            "description": "Feature Access Code Name.",
                            "type": "string"
                          },
                          "mainCode": {
                            "title": "Feature Access Code",
                            "description": "Feature Access Code.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 5
                          },
                          "alternateCode": {
                            "title": "Feature Access Code",
                            "description": "Feature Access Code.",
                            "type": ["string", "null"],
                            "minLength": 1,
                            "maxLength": 5
                          },
                          "enable": {
                            "title": "Enable Feature Access Codes",
                            "description": "Enable Feature Access Codes.",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "callProcessingPolicy": {
                  "title": "Site call processing policy settings",
                  "description": "Container for Site call processing policy settings.",
                  "type": "object",
                  "required": ["callingLineId", "media", "callLimits", "translationAndRouting", "incomingCallerId"],
                  "properties": {
                    "callingLineId": {
                      "title": "Calling Line Id",
                      "description": "Container for Calling Line Id policy settings.",
                      "type": "object",
                      "required": ["policy", "redirectingIdentity", "blockCallingNameForExternalCalls", "useSiteCLIDSetting", "useSiteName", "allowDepartmentCLIDNameOverride"],
                      "properties": {
                        "policy": {
                          "title": "Container for Calling Line Id policy settings",
                          "description": "Container for Calling Line Id policy settings.",
                          "type": "object",
                          "required": ["external", "customer", "site", "emergency"],
                          "properties": {
                            "external": {
                              "title": "Calling Line ID Policy Selections",
                              "description": "Calling Line ID Policy Selections.",
                              "enum": ["Use DN", "Use Configurable CLID", "Use Group CLID"]
                            },
                            "customer": {
                              "title": "Internal Call CLID Policy applicable to Customer",
                              "description": "Internal Call CLID Policy applicable to Customer.",
                              "enum": ["Use Extension", "Use Location Code plus Extension", "Use External Calls Policy"]
                            },
                            "site": {
                              "title": "Internal Call CLID Policy applicable to Site",
                              "description": "Internal Call CLID Policy applicable to Site.",
                              "enum": ["Use Extension", "Use Location Code plus Extension", "Use External Calls Policy"]
                            },
                            "emergency": {
                              "title": "Emergency Calling Line ID Policy Selections",
                              "description": "Emergency Calling Line ID Policy Selections.",
                              "enum": ["Use DN", "Use Configurable CLID", "Use Group CLID"]
                            }
                          }
                        },
                        "redirectingIdentity": {
                          "title": "Container for Calling Line Id policy identity redirecting settings",
                          "description": "Container for Calling Line Id policy settings.",
                          "type": "object",
                          "required": ["allowAlternateNumbers", "allowConfigurableCLID"],
                          "properties": {
                            "allowAlternateNumbers": {
                              "title": "Allow Alternate Numbers for Redirecting Identity",
                              "description": "Allow Alternate Numbers for Redirecting Identity.",
                              "type": "boolean"
                            },
                            "allowConfigurableCLID": {
                              "title": "Allow Configurable CLID for Redirecting Identity",
                              "description": "Allow Configurable CLID for Redirecting Identity.",
                              "type": "boolean"
                            }
                          }
                        },
                        "blockCallingNameForExternalCalls": {
                          "title": "Block Calling Name for External Calls",
                          "description": "Block Calling Name for External Calls.",
                          "type": "boolean"
                        },
                        "useSiteCLIDSetting": {
                          "title": "Use Site Calling Line Id",
                          "description": "Use Site Calling Line Id Policy.",
                          "type": "boolean"
                        },
                        "useSiteName": {
                          "title": "Use site name",
                          "description": "Use site name for Calling Line Identity.",
                          "type": "boolean"
                        },
                        "allowDepartmentCLIDNameOverride": {
                          "title": "Allow Department Name Override",
                          "description": "Allow Department Name Override.",
                          "type": "boolean"
                        }
                      }
                    },
                    "media": {
                      "title": "Media policy settings",
                      "description": "Container for Media policy settings.",
                      "type": "object",
                      "required": ["useSiteMediaSetting", "mediaPolicySelection", "supportedMediaSetName"],
                      "properties": {
                        "useSiteMediaSetting": {
                          "title": "Use Site Media Policy",
                          "description": "Use Site Media Policy.",
                          "type": "boolean"
                        },
                        "mediaPolicySelection": {
                          "title": "Media Policy Selections",
                          "description": "Media Policy Selections.",
                          "enum": ["Use Uncompressed Codec", "Use Supported Media Set", "No Restrictions"]
                        },
                        "supportedMediaSetName": {
                          "title": "Media Set name",
                          "description": "Media Set name.",
                          "type": ["string", "null"],
                          "minLength": 1,
                          "maxLength": 80
                        }
                      }
                    },
                    "callLimits": {
                      "title": "Call limits policy settings",
                      "description": "Container for call limits policy settings.",
                      "type": "object",
                      "required": ["useSiteCallLimitsSetting", "simultaneous", "callTime", "concurrent", "depth"],
                      "properties": {
                        "useSiteCallLimitsSetting": {
                          "title": "Use Site Call Limits Policy",
                          "description": "Use Site Call Limits Policy.",
                          "type": "boolean"
                        },
                        "simultaneous": {
                          "title": "Container for simultaneous call limits policy settings",
                          "description": "Container for simultaneous call limits policy settings.",
                          "type": "object",
                          "required": ["calls", "videoCalls"],
                          "properties": {
                            "calls": {
                              "title": "Container for simultaneous calls, call limits policy settings",
                              "description": "Container for simultaneous calls, call limits policy settings.",
                              "type": "object",
                              "required": ["useMaximum", "maximum"],
                              "properties": {
                                "useMaximum": {
                                  "title": "Enable Maximum Number of Concurrent Calls",
                                  "description": "Enable Maximum Number of Concurrent Calls.",
                                  "type": "boolean"
                                },
                                "maximum": {
                                  "title": "Maximum Number of Simultaneous Calls",
                                  "description": "Maximum Number of Simultaneous Calls.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 999999
                                }
                              }
                            },
                            "videoCalls": {
                              "title": "Container for simultaneous video calls, call limits policy settings",
                              "description": "Container for simultaneous video calls, call limits policy settings.",
                              "type": "object",
                              "required": ["useMaximum", "maximum"],
                              "properties": {
                                "useMaximum": {
                                  "title": "Enable Maximum Number of Concurrent Calls",
                                  "description": "Enable Maximum Number of Concurrent Calls.",
                                  "type": "boolean"
                                },
                                "maximum": {
                                  "title": "Maximum Number of Simultaneous Calls",
                                  "description": "Maximum Number of Simultaneous Calls.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 999999
                                }
                              }
                            }
                          }
                        },
                        "callTime":{
                          "title": "Container for call limits, call time policy settings",
                          "description": "Container for call limits, call time policy settings.",
                          "type": "object",
                          "required": ["answeredCalls", "unansweredCalls"],
                          "properties": {
                            "answeredCalls": {
                              "title": "Container for call limits, call time policy settings for answered calls",
                              "description": "Container for call limits, call time policy settings for answered calls.",
                              "type": "object",
                              "required": ["useMaximum", "maximum"],
                              "properties": {
                                "useMaximum": {
                                  "title": "Enable Maximum Duration for Answered Calls",
                                  "description": "Enable Maximum Duration for Answered Calls.",
                                  "type": "boolean"
                                },
                                "maximum": {
                                  "title": "Maximum Call Time for Answered Calls",
                                  "description": "Maximum Call Time for Answered Calls.",
                                  "type": "integer",
                                  "minimum": 3,
                                  "maximum": 2880
                                }
                              }
                            },
                            "unansweredCalls": {
                              "title": "Container for call limits, call time policy settings for unanswered calls",
                              "description": "Container for call limits, call time policy settings for unanswered calls.",
                              "type": "object",
                              "required": ["useMaximum", "maximum"],
                              "properties": {
                                "useMaximum": {
                                  "title": "Enable Maximum Duration for Unanswered Calls",
                                  "description": "Enable Maximum Duration for Unanswered Calls.",
                                  "type": "boolean"
                                },
                                "maximum": {
                                  "title": "Maximum Call Time for Unanswered Calls",
                                  "description": "Maximum Call Time for Unanswered Calls.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 2880
                                }
                              }
                            }
        
                          }
                        },
                        "concurrent": {
                          "title": "Container for concurrent call limits policy settings",
                          "description": "Container for concurrent call limits policy settings.",
                          "type": "object",
                          "required": ["redirectedCalls", "findMeFollowMeInvocations"],
                          "properties": {
                            "redirectedCalls": {
                              "title": "Container for concurrent redirected calls, call limits policy settings",
                              "description": "Container for concurrent redirected calls, call limits policy settings.",
                              "type": "object",
                              "required": ["useMaximum", "maximum"],
                              "properties": {
                                "useMaximum": {
                                  "title": "Enable Maximum Number of Concurrent Redirected Calls",
                                  "description": "Enable Maximum Number of Concurrent Redirected Calls.",
                                  "type": "boolean"
                                },
                                "maximum": {
                                  "title": "Maximum Number of Concurrent Redirected Calls",
                                  "description": "Maximum Number of Concurrent Redirected Calls.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 999999
                                }
                              }
                            },
                            "findMeFollowMeInvocations": {
                              "title": "Container for concurrent Find Me/Follow Me Invocations, call limits policy settings",
                              "description": "Container for concurrent Find Me/Follow Me Invocations, call limits policy settings.",
                              "type": "object",
                              "required": ["useMaximum", "maximum"],
                              "properties": {
                                "useMaximum": {
                                  "title": "Enable Maximum Number of Concurrent Find Me/Follow Me Invocations",
                                  "description": "Enable Maximum Number of Concurrent Find Me/Follow Me Invocations.",
                                  "type": "boolean"
                                },
                                "maximum": {
                                  "title": "Maximum Number of Concurrent Find Me/Follow Me Invocations",
                                  "description": "Maximum Number of Concurrent Find Me/Follow Me Invocations.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 999999
                                }
                              }
                            }
                          }
                        },
                        "depth": {
                          "title": "Container for call depth limits policy settings",
                          "description": "Container for call depth limits policy settings.",
                          "type": "object",
                          "required": ["findMeFollowMe", "redirection"],
                          "properties": {
                            "findMeFollowMe": {
                              "title": "Container for Find Me/Follow Me call depth limits policy settings",
                              "description": "Container for Find Me/Follow Me call depth limits policy settings.",
                              "type": "object",
                              "required": ["useMaximum", "maximum"],
                              "properties": {
                                "useMaximum": {
                                  "title": "Enable Maximum Find Me/Follow Me Depth",
                                  "description": "Enable Maximum Find Me/Follow Me Depth.",
                                  "type": "boolean"
                                },
                                "maximum": {
                                  "title": "Maximum Number of Find Me/Follow Me Depth",
                                  "description": "Maximum Number of Find Me/Follow Me Depth.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 100
                                }
                              }
                            },
                            "redirection": {
                              "title": "Container for call redirection depth limits policy settings",
                              "description": "Container for call redirection depth limits policy settings.",
                              "type": "object",
                              "required": ["maximum"],
                              "properties": {
                                "maximum": {
                                  "title": "Maximum Number of Redirections Depth",
                                  "description": "Maximum Number of Redirections Depth.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 100
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "translationAndRouting": {
                      "title": "Translation and Routing settings",
                      "description": "Container for Translation and Routing settings.",
                      "type": "object",
                      "required": ["useSiteTranslationRoutingSetting", "networkUsageSelection", "enableCustomerExtensionDialing", "enforceCallingLineIdentityRestriction", "allowCustomerSiteCallTyping", "privateCallCategory"],
                      "properties": {
                        "useSiteTranslationRoutingSetting": {
                          "title": "Use Site Translation and Routing Policy",
                          "description": "Use Site Translation and Routing Policy.",
                          "type": "boolean"
                        },
                        "networkUsageSelection": {
                          "title": "Network Usage types",
                          "description": "Network Usage types.",
                          "enum": ["Force All Calls", "Force All Except Extension and Location Calls", "Do Not Force Enterprise and Group Calls"]
                        },
                        "enableCustomerExtensionDialing": {
                          "title": "Enable Customer Extension Dialing",
                          "description": "Enable Customer Extension Dialing.",
                          "type": "boolean"
                        },
                        "enforceCallingLineIdentityRestriction": {
                          "title": "Container for Translation and Routing, Enforce Calling Line Identity Restriction settings",
                          "description": "Container for Translation and Routing, Enforce Calling Line Identity Restriction settings.",
                          "type": "object",
                          "required": ["site"],
                          "properties": {
                            "site": {
                              "title": "Enforce Site Calling Line Identity Restriction",
                              "description": "Enforce Site Calling Line Identity Restriction.",
                              "type": "boolean"
                            }
                          }
                        },
                        "allowCustomerSiteCallTyping": {
                          "title": "Container for Translation and Routing, Customer-Site Call Typing settings",
                          "description": "Container for Translation and Routing, Customer-Site Call Typing settings.",
                          "type": "object",
                          "required": ["privateDialingPlan", "publicDialingPlan"],
                          "properties": {
                            "privateDialingPlan": {
                              "title": "Allow Customer/Site Call Typing For Private Dialing Plan",
                              "description": "Allow Customer/Site Call Typing For Private Dialing Plan.",
                              "type": "boolean"
                            },
                            "publicDialingPlan": {
                              "title": "Allow Customer/Site Call Typing For Public Dialing Plan",
                              "description": "Allow Customer/Site Call Typing For Public Dialing Plan.",
                              "type": "boolean"
                            }
                          }
                        },
                        "privateCallCategory": {
                          "title": "Container for Translation and Routing, Private Call Category settings",
                          "description": "Container for Translation and Routing, Private Call Category settings.",
                          "type": "object",
                          "required": ["overrideCLIDRestriction", "useCustomerCLID"],
                          "properties": {
                            "overrideCLIDRestriction": {
                              "title": "Override CLID Restriction For Private Call Category",
                              "description": "Override CLID Restriction For Private Call Category.",
                              "type": "boolean"
                            },
                            "useCustomerCLID": {
                              "title": "Use Enterprise CLID For Private Call Category",
                              "description": "Use Enterprise CLID For Private Call Category.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "incomingCallerId": {
                      "title": "Incoming Caller ID settings",
                      "description": "Container for Incoming Caller ID settings.",
                      "type": "object",
                      "required": ["useSiteDCLIDSetting", "enableDialableCallerID"],
                      "properties": {
                        "useSiteDCLIDSetting": {
                          "title": "Use Site Dialable Caller ID Policy",
                          "description": "Use Site Dialable Caller ID Policy.",
                          "type": "boolean"
                        },
                        "enableDialableCallerID": {
                          "title": "Enable Dialable Caller ID",
                          "description": "Enable Dialable Caller ID.",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "required": ["profile", "extensionLength", "passwordRules", "featureAccessCodes", "callProcessingPolicy"]
            }
          ]
        }

### Modify a Site [PUT]
Modify a Site resource.

+ Links
    + self - Self link.

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120


+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
          "_links": {
            "self": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite"
            }
          },
          "customerId": "DemoCustomer",
          "siteId": "DemoSite"
        }
        

    + Schema

        {
          "title": "Modify Site resource",
          "description": "Modify Site resource",
          "allOf": [
            {
              "$ref": "/base#/definitions/HalResponse"
            }, {
              "required": ["_links"]
            }, {
              "properties": {
                "customerId": {
                  "$ref": "/base#/definitions/CustomerId"
                },
                "siteId": {
                  "$ref": "/base#/definitions/SiteId"
                }
              },
              "required": ["customerId", "siteId"]
            }
          ]
        }

## Password resource [/api/customers/{+customerId}/sites/{+siteId}/]
Represents Password resource.

### URI Template Parameters JSON Schema
    {
      "title": "Site resource URI template parameters",
      "description": "Site resource URI template parameters",
      "type": "object",
      "properties": {
        "customerId": { "$ref": "/base#/definitions/CustomerId" },
        "siteId": { "$ref": "/base#/definitions/SiteId" }
      },
      "required": ["customerId", "siteId"]
    }

### Generate User password [POST /api/customers/{+customerId}/sites/{+siteId}/generatePassword] 

+ Links
    + self - Self link.

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120


+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
          "_links": {
            "self": { "href": "/api/customers/{+customerId}/sites/{+siteId}/generatePassword" },
            "up": { "href": "/api/customers/{+customerId}/sites/{+siteId}" }
          },
          "password": "H54!#sfUa"
        }

    + Schema

        {
          "title": "Generate User password",
          "description": "Generate User password",
          "allOf": [
            {
              "$ref": "/base#/definitions/HalResponse"
            }, {
              "required": ["_links"]
            }, {
              "properties": {
                "password": {
                  "title": "Password",
                  "description": "Randomly generated user password.",
                  "type": "string"
                }
              },
              "required": ["password"]
            }
          ]
        }

### Validate User password [POST /api/customers/{+customerId}/sites/{+siteId}/validatePassword] 

+ Links
    + self - Self link.

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120


+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
          "_links": {
            "self": {
              "href": "/api/customers/{+customerId}/sites/{+siteId}/validatePassword"
            },
            "up": {
              "href": "/api/customers/{+customerId}/sites/{+siteId}"
            }
          },
          "isValid": false,
          "violations": ["upperCaseLetters", "lowerCaseLetters", "length"],
          "passwordRules": {
            "useRuleLevel": "Customer",
            "disallowRulesModification": false,
            "rulesApplyTo": "Administrator",
            "allowWebAddExternalAuthenticationUsers": false,
            "validations": {
              "userId": {
                "disallow": false
              },
              "oldPassword": {
                "disallow": true
              },
              "reversedOldPassword": {
                "disallow": false
              },
              "previousPasswords": {
                "disallow": true,
                "numberOfPasswords": 2
              },
              "digits": {
                "require": true,
                "minimum": 2
              },
              "upperCaseLetters": {
                "restrict": true,
                "minimum": 1
              },
              "lowerCaseLetters": {
                "require": true,
                "minimum": 1
              },
              "nonAlphanumericCharacters": {
                "require": true,
                "minimum": 1
              },
              "length": {
                "minimum": 8
              }
            },
            "loginAttempts": {
              "restrict": true,
              "maximum": 3
            },
            "expirePassword": {
              "enable": true,
              "numberOfDays": 30
            },
            "loginDisabledNotification": {
              "sendEmail": true,
              "email": "DemoEmail@example.com"
            }
          }
        }

    + Schema

        {
          "title": "Validate User password",
          "description": "Validate User password",
          "allOf": [
            {
              "$ref": "/base#/definitions/HalResponse"
            }, {
              "required": ["_links"]
            }, {
              "properties": {
                "isValid": {
                  "title": "True if submitted password do comply with password rules for given site.",
                  "description": "True if submitted password do comply with password rules for given site.",
                  "type": "boolean"
                },
                "violations": {
                  "title": "Array of violated rules",
                  "description": "LArray of violated rules.",
                  "type": "array",
                  "items": {
                    "enum": ["userId", "digits", "upperCaseLetters", "lowerCaseLetters", "nonAlphanumericCharacters", "length"]
                  }
                },
                "passwordRules": {
                  "title": "Container for Customer password rules settings, matching to passwordRules section in Site resource.",
                  "description": "Container for Customer password rules settings, matching to passwordRules section in Site resource.",
                  "type": "object",
                  "required": ["useRuleLevel", "disallowRulesModification", "rulesApplyTo", "allowWebAddExternalAuthenticationUsers", "validations", "loginAttempts", "expirePassword", "loginDisabledNotification"],
                  "properties": {
                    "useRuleLevel": {
                      "title": "Choices for the Customer password rule to decide which type of rules to use",
                      "description": "Choices for the Customer password rule to decide which type of rules to use.",
                      "enum": ["System", "Customer"]
                    },
                    "disallowRulesModification": {
                      "title": "Disallow password rules modification",
                      "description": "Disallow password rules modification.",
                      "type": "boolean"
                    },
                    "rulesApplyTo": {
                      "title": "Rules apply to",
                      "description": "Rules apply to.",
                      "enum": ["Administrator", "Administrator and User", "Group Administrator and User External Authentication"]
                    },
                    "allowWebAddExternalAuthenticationUsers": {
                      "title": "Allow users to be created when external authentication is enabled",
                      "description": "Allow users to be created when external authentication is enabled.",
                      "type": "boolean"
                    },
                    "validations": {
                      "title": "Container for Customer password rules validation settings",
                      "description": "Container for Customer password rules validation settings.",
                      "type": "object",
                      "required": ["userId", "oldPassword", "reversedOldPassword", "previousPasswords", "digits", "upperCaseLetters", "lowerCaseLetters", "nonAlphanumericCharacters", "length"],
                      "properties": {
                        "userId": {
                          "title": "Container for \"disallow user id\" rule",
                          "description": "Container for \"disallow user id\" rule",
                          "type": "object",
                          "required": ["disallow"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow user id rule flag",
                              "description": "Disallow user id rule flag.",
                              "type": "boolean"
                            }
                          }
                        },
                        "oldPassword": {
                          "title": "Container for \"disallow old password\" rule",
                          "description": "Container for \"disallow old password\" rule.",
                          "type": "object",
                          "required": ["disallow"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow old password flag",
                              "description": "Disallow old password flag.",
                              "type": "boolean"
                            }
                          }
                        },
                        "reversedOldPassword": {
                          "title": "Container for \"Disallow reversed old password\" rule",
                          "description": "Container for \"Disallow reversed old password\" rule.",
                          "type": "object",
                          "required": ["disallow"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow reversed old password flag",
                              "description": "Disallow reversed old password flag.",
                              "type": "boolean"
                            }
                          }
                        },
                        "previousPasswords": {
                          "title": "Container for previous passwords rules",
                          "description": "Container for previous passwords rules.",
                          "type": "object",
                          "required": ["disallow", "numberOfPasswords"],
                          "properties": {
                            "disallow": {
                              "title": "Disallow previous passwords",
                              "description": "Disallow previous passwords.",
                              "type": "boolean"
                            },
                            "numberOfPasswords": {
                              "title": "Number of previous passwords to keep in history",
                              "description": "Number of previous passwords to keep in history.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "digits": {
                          "title": "Container for digits rules",
                          "description": "Container for digits rules.",
                          "type": "object",
                          "required": ["require", "minimum"],
                          "properties": {
                            "require": {
                              "title": "Require a minimum number of digits",
                              "description": "Require a minimum number of digits.",
                              "type": "boolean"
                            },
                            "minimum": {
                              "title": "Minimum number of required digits",
                              "description": "Minimum number of required digits.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "upperCaseLetters": {
                          "title": "Container for uppercase letters rules",
                          "description": "Container for uppercase letters rules.",
                          "type": "object",
                          "required": ["restrict", "minimum"],
                          "properties": {
                            "restrict": {
                              "title": "Require a minimum number of uppercase letters",
                              "description": "Require a minimum number of uppercase letters.",
                              "type": "boolean"
                            },
                            "minimum": {
                              "title": "Minimum number of required uppercase letters",
                              "description": "Minimum number of required uppercase letters.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "lowerCaseLetters": {
                          "title": "Container for lowercase letters rules",
                          "description": "Container for lowercase letters rules.",
                          "type": "object",
                          "required": ["require", "minimum"],
                          "properties": {
                            "require": {
                              "title": "Require a minimum number of lowercase letters",
                              "description": "Require a minimum number of lowercase letters.",
                              "type": "boolean"
                            },
                            "minimum": {
                              "title": "Minimum number of required lowercase letters",
                              "description": "Minimum number of required lowercase letters.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "nonAlphanumericCharacters": {
                          "title": "Container for nonAlphanumeric characters rules",
                          "description": "Container for nonAlphanumeric characters rules.",
                          "type": "object",
                          "required": ["require", "minimum"],
                          "properties": {
                            "require": {
                              "title": "Require a minimum number of alphanumeric characters",
                              "description": "Require a minimum number of alphanumeric characters.",
                              "type": "boolean"
                            },
                            "minimum": {
                              "title": "Minimum number of required alphanumeric characters",
                              "description": "Minimum number of required alphanumeric characters.",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            }
                          }
                        },
                        "length": {
                          "title": "Container for nonAlphanumeric characters rules",
                          "description": "Container for nonAlphanumeric characters rules.",
                          "type": "object",
                          "required": ["minimum"],
                          "properties": {
                            "minimum": {
                              "title": "Minimum length of the password",
                              "description": "Minimum length of the password.",
                              "type": "integer",
                              "minimum": 3,
                              "maximum": 40
                            }
                          }
                        }
                      }
                    },
                    "loginAttempts": {
                      "title": "Container for login attempts rules",
                      "description": "Container for login attempts rules.",
                      "type": "object",
                      "required": ["restrict"],
                      "properties": {
                        "restrict": {
                          "title": "Restrict",
                          "description": "Disable login after a maximum number of failed login attempts.",
                          "type": "boolean"
                        },
                        "maximum": {
                          "title": "Maximum number of failed login attempts",
                          "description": "Maximum number of failed login attempts.",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10
                        }
                      }
                    },
                    "expirePassword": {
                      "title": "Container for Password expiration rules",
                      "description": "Container for password expiration rules.",
                      "type": "object",
                      "required": ["enable"],
                      "properties": {
                        "enable": {
                          "title": "Expire password after a number of days.",
                          "description": "Expire password after a number of days.",
                          "type": "boolean"
                        },
                        "numberOfDays": {
                          "title": "Days until the password expires",
                          "description": "Days until the password expires.",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 199
                        }
                      }
                    },
                    "loginDisabledNotification": {
                      "title": "Container for login disabled notification settings",
                      "description": "Container for login disabled notification settings.",
                      "type": "object",
                      "required": ["sendEmail", "email"],
                      "properties": {
                        "sendEmail": {
                          "title": "Send email when login is disabled",
                          "description": "Send email when login is disabled.",
                          "type": "boolean"
                        },
                        "email": {
                          "anyOf":[
                            { "$ref": "/base#/definitions/EmailAddress" },
                            { "type": "null" }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "required": ["isValid", "passwordRules"]
            }
          ]
        }

## Restore default Site feature access codes  [/api/customers/{+customerId}/sites/{+siteId}/restoreDefaultFeatureAccessCodes]

### URI Template Parameters JSON Schema
    {
      "title": "Site resource URI template parameters",
      "description": "Site resource URI template parameters",
      "type": "object",
      "properties": {
        "customerId": { "$ref": "/base#/definitions/CustomerId" },
        "siteId": { "$ref": "/base#/definitions/SiteId" }
      },
      "required": ["customerId", "siteId"]
    }

### Restore default Site feature access codes [POST]
Restore default Site feature access codes.

+ Links
    + self - Self link.

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120z


+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
          "_links": {
            "self": {
              "href": "http://uc.example.com/api/customers/DemoCustomer/sites/DemoSite/restoreDefaultFeatureAccessCodes"
            }
          },
          "customerId": "DemoCustomer",
          "siteId": "DemoSite"
        }
        

    + Schema

        {
          "title": "Restore default Site feature access codes",
          "description": "Restore default Site feature access codes",
          "type": "object",
          "allOf": [
            {
              "$ref": "/base#/definitions/HalResponse"
            },
            {
              "required": ["_links" ]
            },
            {
              "properties": {
                "customerId": { "$ref": "/base#/definitions/CustomerId" },
                "siteId": { "$ref": "/base#/definitions/SiteId" }
              },
              "required": ["customerId", "siteId"]
            }
          ]
        }

# Group System
Following resources belong to System.

## System Time Zones [/api/time-zones]
Represents time zones list resource.

### Retrieve Time Zones list [GET]
Retrieve system Time Zones list.

+ Links
    + self - Self link.

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120


+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
            "_links": {
                "self": {
                    "href": "http://uc.example.com/api/time-zones"
                }
            },
            "serverTimeZone": "America/New_York",
            "timeZones": {
                "America/St_Johns": {
                    "name": "America/St_Johns",
                    "displayName": "(GMT-02:30) (Canada) Newfoundland"
                },
                "America/Halifax": {
                    "name": "America/Halifax",
                    "displayName": "(GMT-03:00) (Canada) Atlantic Time"
                },
                "America/Montreal": {
                    "name": "America/Montreal",
                    "displayName": "(GMT-04:00) (Canada) Eastern Time"
                },
                "America/New_York": {
                    "name": "America/New_York",
                    "displayName": "(GMT-04:00) (US) Eastern Time"
                },
                "America/Indianapolis": {
                    "name": "America/Indianapolis",
                    "displayName": "(GMT-04:00) US Indiana"
                },
                "America/Winnipeg": {
                    "name": "America/Winnipeg",
                    "displayName": "(GMT-05:00) (Canada) Central Time"
                },
                "America/Chicago": {
                    "name": "America/Chicago",
                    "displayName": "(GMT-05:00) (US) Central Time"
                },
                "America/Edmonton": {
                    "name": "America/Edmonton",
                    "displayName": "(GMT-06:00) (Canada) Mountain Time"
                },
                "America/Denver": {
                    "name": "America/Denver",
                    "displayName": "(GMT-06:00) (US) Mountain Time"
                },
                "America/Vancouver": {
                    "name": "America/Vancouver",
                    "displayName": "(GMT-07:00) (Canada) Pacific Time"
                },
                "America/Los_Angeles": {
                    "name": "America/Los_Angeles",
                    "displayName": "(GMT-07:00) (US) Pacific Time"
                },
                "America/Phoenix": {
                    "name": "America/Phoenix",
                    "displayName": "(GMT-07:00) US Arizona"
                },
                "America/Anchorage": {
                    "name": "America/Anchorage",
                    "displayName": "(GMT-08:00) US Alaska"
                },
                "Pacific/Honolulu": {
                    "name": "Pacific/Honolulu",
                    "displayName": "(GMT-10:00) US Hawaii"
                }
            }
        }

    + Schema

        {
            "title": "Retrieve System time zones",
            "description": "Retrieve System time zones",
            "allOf": [
                {
                    "$ref": "/base#/definitions/HalResponse"
                }, {
                    "required": ["_links"]
                }, {
                    "properties": {
                        "serverTimeZone": {
                            "$ref": "/base#/definitions/TimeZone"
                        },
                        "timeZones": {
                            "type": "object",
                            "patternProperties": {
                                "^.+$" : {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "name": {
                                            "$ref": "/base#/definitions/TimeZone"
                                        },
                                        "displayName": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["name", "displayName"]
                                }
                            }
                        }
                    },
                    "required": ["serverTimeZone", "timeZones"]
                }
            ]
        }

# Group User Services
Following resources belong to User Services.

## VoIP User’s Call Forwarding Always Settings [/loki/users/{+userId}/services/Call%20Forwarding%20Always]
VoIP User’s Call Forwarding Always Settings

### URI Template Parameters JSON Schema
    {
        "title": "VoIP User resource URI template parameters",
        "description": "VoIP User resource URI template parameters",
        "type": "object",
        "properties": {
            "userId": { "$ref": "/base#/definitions/UserId" }
        },
        "required": ["userId"]
    }
### Retrieve a VoIP User’s Call Forwarding Always service settings [GET]
Retrieve a VoIP User’s Call Forwarding Always service settings

+ Links
    + self - [GET /loki/users/{+userId}/services/Call%20Forwarding%20Always]
    + up - Link to User assigned services [GET /loki/users/{+userId}/services]
    + ls:user - Link to associated User. [GET /loki/users/{+userId}]

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120


+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
            "_links": {
                "self": {
                    "href": "http://lokiserver.apiary.io/loki/users/2005553001%40example.com/services/Call%20Forwarding%Always"
                },
                "up": { "href": "http://lokiserver.apiary.io/loki/users/2005553001%40example.com/services" },
                "ls:user": { "href": "http://lokiserver.apiary.io/loki/users/2005553001%40example.com" }
            },
            "userId": "2005553001@example.com",
            "isActive": true,
            "forwardToPhoneNumber": "2005553002",
            "isRingSplashActive": false
        }

    + Schema

        {
            "title": "Retrieve a VoIP User’s Call Forwarding Always service settings Response",
            "description": "Retrieves a VoIP User’s Call Forwarding Always service settings Response",
            "allOf": [
                { "$ref": "/base#/definitions/HalResponse" },
                { "properties": {
                    "userId": {
                        "$ref": "/base#/definitions/UserId"
                    },
                    "isActive": {
                        "title": "is Active",
                        "description": "Flag that specifies if the service is enabled.",
                        "type": "boolean"
                    },
                    "forwardToPhoneNumber": {
                        "$ref": "/base#/definitions/OutgoingDnOrSipUri"
                    },
                    "isRingSplashActive": {
                        "title": "is Ring Splash Active",
                        "description": "Play Ring Reminder when a call is forwarded.",
                        "type": "boolean"
                    }
                }},
                { "required": ["_links", "userId", "isActive", "forwardToPhoneNumber", "isRingSplashActive"] }
            ]
        }


### Modify VoIP User’s Call Forwarding Always Settings [PUT]
Modify VoIP User’s Call Forwarding Always Settings

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120
   
    + Body
 
        {
            "isActive": true,
            "forwardToPhoneNumber": "+1-4151112222",
            "isRingSplashActive": false
        }
        

    + Schema

        {
            "title": "Modify a VoIP User’s Call Forwarding Always service settings Request",
            "description": "Modify a VoIP User’s Call Forwarding Always service settings Request",
            "allOf": [
                { "properties": {
                    "isActive": {
                        "title": "is Active",
                        "description": "Flag that specifies if the service is enabled.",
                        "type": "boolean"
                    },
                    "forwardToPhoneNumber": {
                        "$ref": "/base#/definitions/OutgoingDnOrSipUri"
                    },
                    "isRingSplashActive": {
                        "title": "is Ring Splash Active",
                        "description": "Play Ring Reminder when a call is forwarded.",
                        "type": "boolean"
                    }
                }}
            ]
        }

+ Response 204 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120
# Group VoIP User
Following resources belong to VoIP User entity.

## VoIP User [/loki/users/{+userId}]
Represents VoIP User resource.

### URI Template Parameters JSON Schema
    {
        "title": "VoIP User resource URI template parameters",
        "description": "VoIP User resource URI template parameters",
        "type": "object",
        "properties": {
            "userId": { "$ref": "/base#/definitions/UserId" }
        },
        "required": ["userId"]
    }


### Retrieve a VoIP User [GET]
Retrieve a VoIP User information.

+ Links
    + self - Self link.
    + collection - Site Users collection. Single. [/loki/customers/{+customerId}/sites/{+siteId}/users]
    + ls:customer - Customer resource. Single. [/loki/customers/{+customerId}]
    + ls:site - Site resource. Single. [/loki/customers/{+customerId}/sites/{+siteId}]
    + ls:user-device - User's Device. Single. Optional - not present when user does not have primary device. [/loki/customers/{+customerId}/sites/{+siteId}/devices/{+deviceId}]
    + ls:user-registrations - User�s registrations collection. Single. [/loki/users/{+userId}/registrations]
    + ls:user-services - User's services document. Single. [/loki/users/{+userId}/services]
    + ls:user-reInvite - User ReInvite controller. Single. [/loki/users/{+userId}/reInvite]
    + ls:user-swapDevice - Swap Device controller. Single. [/loki/users/{+userId}/swapDevice]
    + ls:user-resetDeviceCredentials - Reset Device Credentials controller. Single. [/loki/users/{+userId}/resetDeviceCredentials]

+ Embedded Resources
    + ls:user-device - Contains embedded representation of user's device. Not present if device is not assigned.

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120


+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
            "_links": {
                "self": {
                    "href": "http://example.com/loki/customers/DemoCustomer/sites/DemoSite/users/testuser@example.net"
                },
                "collection": {
                    "href": "http://example.com/loki/customers/DemoCustomer/sites/DemoSite/users"
                },
                "ls:customer": {
                    "href": "http://example.com/loki/customers/DemoCustomer"
                },
                "ls:site": {
                    "href": "http://example.com/loki/customers/DemoCustomer/sites/DemoSite"
                },
                "ls:user-device": {
                    "href": "http://example.com/loki/customers/DemoCustomer/sites/DemoSite/devices/DemoDevice"
                },
                "ls:user-services": {
                    "href": "http://example.com/loki/customers/DemoCustomer/sites/DemoSite/users/testuser@example.net/services"
                },
                "ls:user-registrations": {
                    "href": "http://example.com/loki/users/testuser@example.net/registrations"
                },
                "ls:user-reInvite": {
                    "href": "http://example.com/loki/users/testuser@example.net/reInvite"
                },
                "ls:user-swapDevice": {
                    "href": "http://example.com/loki/users/testuser@example.net/swapDevice"
                },
                "ls:user-resetDeviceCredentials": {
                    "href": "http://example.com/loki/users/testuser@example.net/resetDeviceCredentials"
                }
            },
            "_embedded": {
                "ls:user-device": {
                    "_links": {
                        "self": {
                            "href": "http://example.com/loki/customers/DemoCustomer/sites/DemoSite/devices/DemoDevice"
                        }
                    },
                    "deviceId": "DemoDevice",
                    "level": "Site",
                    "name": "DemoDevice",
                    "linePort": "testdevice@example.net",
                    "port": null,
                    "privateIdentity": null,
                    "contact": [],
                    "staticRegistrationCapable": true,
                    "useDomain": true,
                    "supportVisualDeviceManagement": false
                }
            },
            "customerId": "DemoCustomer",
            "siteId": "DemoSite",
            "userId": "testuser@example.net",
            "lastName": "Smith",
            "firstName": "John",
            "callingLineId": {
                "lastName": "Smith",
                "firstName": "John",
                "phoneNumber": "+1-4152223000"
            },
            "nameDialingName": {
                "lastName": "Smith",
                "firstName": "John"
            },
            "phoneNumber": "+1-4152223000",
            "extension": "3000",
            "department": {
                "type": "Site",
                "customerId": "DemoCustomer",
                "siteId": "DemoSite",
                "name": "Department"
            },
            "departmentFullPath": "Parent Department \\ Department",
            "language": "English",
            "timeZone": "GMT+00:00",
            "defaultAlias": "testuser@example.net",
            "alias": [
                "testuser_old@example.net",
                "testuser_me@example.net"
            ],
            "title": "Mr",
            "pagerPhoneNumber": null,
            "mobilePhoneNumber": "+1-7772223000",
            "emailAddress": "jsmith@example.com",
            "yahooId": null,
            "address": {
                "location": null,
                "line1": "Rose 100",
                "line2": null,
                "city": "Beverly Hills",
                "stateOrProvince": "CA",
                "zipOrPostalCode": "90210",
                "country": "United States"
            },
            "countryCode": "1",
            "nationalPrefix": null,
            "networkClassOfService": "NCOS",
            "officeZoneName": "North Branch",
            "primaryZoneName": null,
            "impId": null,
            "extensions": {
                "broadworks": {
                    "resourceId": "testuser@example.net"
                }
            }
        }

    + Schema

        {
            "title": "Retrieve VoIP User response",
            "description": "Retrieve VoIP User response",
            "allOf": [
                {
                    "$ref": "/base#/definitions/HalResponse"
                }, {
                    "required": ["_links", "_embedded"]
                }, {
                    "properties": {
                        "_embedded": {
                            "properties": {
                                "ls:user-device": {
                                    "allOf": [
                                        {
                                            "$ref": "/user#/definitions/UserDevice"
                                        }, {
                                            "required": [
                                                "deviceId", "level", "name", "linePort", "port", "contact",
                                                "staticRegistrationCapable", "useDomain", "_links"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }, {
                    "$ref": "/user#/definitions/User"
                }, {
                    "required": [
                        "customerId", "siteId", "userId", "lastName", "firstName", "callingLineId", "nameDialingName",
                        "phoneNumber", "extension", "department", "departmentFullPath", "language", "timeZone", "defaultAlias",
                        "alias", "title", "pagerPhoneNumber", "mobilePhoneNumber", "emailAddress", "yahooId", "address",
                        "countryCode", "nationalPrefix", "networkClassOfService", "extensions"
                    ]
                }
            ]
        }


## VoIP User Registrations List [/loki/users/{+userId}/registrations]
Represents the Collection of VoIP User registrations.

### URI Template Parameters JSON Schema
    {
        "title": "VoIP User resource URI template parameters",
        "description": "VoIP User resource URI template parameters",
        "type": "object",
        "properties": {
            "userId": { "$ref": "/base#/definitions/UserId" }
        },
        "required": ["userId"]
    }
### Retrieve a VoIP User's Registrations List [GET /loki/users/{+userId}/registrations]
Retrieve a VoIP User's Registrations List.

+ Links
    + self
    + up - Link to User [GET /loki/users/{+userId}]

+ Embedded Resources
    + item

+ Parameters
    + userId - VoIP User ID

+ Request (application/json)

    + Headers
        Transaction-Id: 1380080943120

+ Response 200 (application/hal+json)

    + Headers
        Transaction-Id: 1380080943120

    + Body

        {
            "_links": {
                "self": {
                    "href": "http://loki.example.com/loki/users/exampleUserId%40example.com/registrations"
                },
                "up": {
                    "href": "http://loki.example.com/loki/users/exampleUserId%40example.com"
                }
            },
            "_embedded": {
                "item": [
                    {
                        "_links": {
                            "ls:registered-device": {
                                "href": "http://loki.example.com/loki/customers/ExampleCom/sites/ExampleCom/devices/example_btbc_pc"
                            }
                        },
                        "_embedded": {
                            "ls:registered-device": {
                                "_links": {
                                    "self": {
                                        "href": "http://loki.example.com/loki/customers/ExampleCom/sites/ExampleCom/devices/example_btbc_pc"
                                    }
                                },
                                "customerId": "ExampleCom",
                                "siteId": "ExampleCom",
                                "deviceId": " example_btbc_pc",
                                "name": " example_btbc_pc",
                                "level": "Site"
                            }
                        },
                        "userId": "exampleUserId@example.com",
                        "order": 1,
                        "uri": "sip:btbcpcexampleUserId-9k0bol85l7lvf@10.48.1.13:5060;transport=udp",
                        "expiration": "Wed Aug 12 03:17:30 EDT 2015",
                        "linePort": "btbcpcexampleUserId@example.com",
                        "endpointType": "Primary",
                        "publicNetAddress": "10.48.1.13",
                        "publicPort": "5060",
                        "privateNetAddress": "",
                        "privatePort": "",
                        "userAgent": "bc-uc - UC-One (21.2.0.443 Windows (160))",
                        "lockout": {
                            "started": "",
                            "expires": "",
                            "count": "0"
                        }
                    },
                    {
                        "_links": {
                            "ls:registered-device": {
                                "href": "http://loki.example.com/loki/customers/ExampleCom/devices/example_btbc_mac"
                            }
                        },
                        "_embedded": {
                            "ls:registered-device": {
                                "_links": {
                                    "self": {
                                        "href": "http://loki.example.com/loki/customers/ExampleCom/devices/example_btbc_mac"
                                    }
                                },
                                "customerId": "ExampleCom",
                                "deviceId": "example_btbc_mac",
                                "name": "example_btbc_mac",
                                "level": "Customer"
                            }
                        },
                        "userId": "exampleUserId@example.com",
                        "order": 2,
                        "uri": "sip:btbcmacexampleUserId-9k0bol85l7lvf@10.48.1.14:5060;transport=udp",
                        "expiration": "Wed Aug 12 03:17:30 EDT 2015",
                        "linePort": "btbcmacexampleUserId@example.com",
                        "endpointType": "Shared Call Appearance",
                        "publicNetAddress": "10.48.1.14",
                        "publicPort": "5060",
                        "privateNetAddress": "",
                        "privatePort": "",
                        "userAgent": "bc-uc - UC-One (21.2.0.443 Mac (160))",
                        "lockout": {
                            "started": "",
                            "expires": "",
                            "count": "0"
                        }
                    }
                ]
            }
        }

    + Schema

        {
            "title": "Retrieve VoIP User's Registrations response",
            "description": "Retrieve VoIP User's Registrations response",
            "allOf": [
                { "$ref": "/base#/definitions/HalResponse" },
                { "required": ["_links", "_embedded"] },
                { "properties": {
                    "_embedded": {
                        "properties": {
                            "item": {
                                "type": "array",
                                "items": {
                                    "allOf": [
                                        { "$ref": "/base#/definitions/HalResponse" },
                                        { "required": ["_links", "_embedded"] },
                                        { "properties": {
                                            "_embedded": {
                                                "properties": {
                                                    "ls:registered-device": {
                                                        "allOf": [
                                                            { "$ref": "/base#/definitions/HalResponse" },
                                                            { "required": ["_links"] },
                                                            { "$ref": "/user#/definitions/UserDevice" },
                                                            { "properties": {
                                                                "customerId": { "$ref": "/base#/definitions/CustomerId" },
                                                                "siteId": { "$ref" : "/base#/definitions/SiteId" },
                                                                "deviceId": { "$ref" : "/base#/definitions/DeviceId" }
                                                            } },
                                                            { "required": ["deviceId", "name", "level"] }
                                                        ]
                                                    }
                                                },
                                                "required": ["ls:registered-device"]
                                            },
                                            "userId": { "$ref" : "/base#/definitions/UserId" },
                                            "order": { "type": "integer" },
                                            "uri": { "type": "string" },
                                            "expiration": { "type": "string" },
                                            "linePort": { "type": "string", "minLength": 1, "maxLength": 161 },
                                            "endpointType": { "type": "string" },
                                            "publicNetAddress": { "type": "string" },
                                            "publicPort": { "type": "string" },
                                            "privateNetAddress": { "type": "string" },
                                            "privatePort": { "type": "string" },
                                            "userAgent": { "type": "string" },
                                            "lockout": {
                                                "type": "object",
                                                "properties": {
                                                    "started": { "type": "string" },
                                                    "expires": { "type": "string" },
                                                    "count": { "type": "string" }
                                                },
                                                "required": ["started", "expires", "count"]
                                            }
                                        } },
                                        { "required": ["userId", "order", "uri", "expiration", "linePort", "endpointType", "publicNetAddress", "publicPort", "privateNetAddress", "privatePort", "userAgent", "lockout"] }
                                    ]
                                }
                            }
                        },
                        "required": ["item"]
                    }
                } }
            ]
        }


# Group Footer
The End.